import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import {
  getDatabase,
  ref,
  query,
  onValue,
  limitToLast,
} from "firebase/database";
import QuickChart from "quickchart-js";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

const firebaseConfig = {
  apiKey: "AIzaSyBkhAublGaFV2yjuY1M0nfx3QA4bTFXCWs",
  authDomain: "aistfypgp0.firebaseapp.com",
  databaseURL: "https://aistfypgp0-default-rtdb.firebaseio.com",
  projectId: "aistfypgp0",
  storageBucket: "aistfypgp0.appspot.com",
  messagingSenderId: "911309123203",
  appId: "1:911309123203:web:26c88ea0d94debcb7c35b6",
  measurementId: "G-YQEJXNNM8M",
};

const app = initializeApp(firebaseConfig);
const db = getDatabase(app);

const myChart = new QuickChart();

export default function Home() {
  const [hum, setHum] = useState(0);
  const [temp, setTemp] = useState(0);
  const [time, setTime] = useState("N/A");
  const [recordNo, setRecordNo] = useState(24);

  const humList = [];
  const tempList = [];
  const timeList = [];

  useEffect(() => {
    const lastRecordRef = query(ref(db, "ESP32_APP/"), limitToLast(1));
    onValue(lastRecordRef, (snapshot) => {
      const lastRecord = snapshot.val();

      for (var value in lastRecord) {
        setHum(lastRecord[value].humidity);
        setTemp(lastRecord[value].temperature);
        setTime(lastRecord[value].timestamp);
      }
    });
  }, []);

  const dataRef = query(ref(db, "ESP32_APP/"), limitToLast(recordNo));
  onValue(dataRef, (snapshot) => {
    const data = snapshot.val();

    for (var value in data) {
      humList.push(data[value].humidity);
      tempList.push(data[value].temperature);
      timeList.push(data[value].timestamp);
    }
  })

  myChart.setConfig({
    type: "line",
    data: {
      labels: timeList,
      datasets: [
        {
          label: "Humidity",
          data: humList,
          fill: false
        }, {
          label: "Temperature",
          data: tempList,
          fill: false
        }
      ],
    },
    options: {
      title: {
        display: true,
        text: `Last ${recordNo} Records`
      }
    }
  });

  return (
    <>
      <Head>
        <title>Smart Plant Pot</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>Final Year Project</p>
        </div>

        <div>
          <img className={styles.chart} src={myChart.getUrl()} />
        </div>

        <div className={styles.grid}>
          <div className={styles.card}>
            <h2 className={inter.className}>Humidity</h2>
            <p className={inter.className}>{hum}</p>
          </div>
            
          <div className={styles.card}>
            <h2 className={inter.className}>Temperature</h2>
            <p className={inter.className}>{temp}</p>
          </div>

          <div className={styles.card}>
            <h2 className={inter.className}>Time of Last Record</h2>
            <p className={inter.className}>{time}</p>
          </div>
        </div>
      </main>
    </>
  );
}